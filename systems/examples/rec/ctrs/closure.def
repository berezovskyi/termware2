#
#
#
domain(examples,
 domain(rec,
  domain(ctrs,
    #@option(reduceInFacts(true))
    #@option(loggedEntity(All))
    system(closure,default, 
     ruleset(
       import(general,if),

       0 * $X -> 0,
       $X* 0 -> 0,
       1 * $X -> $X,
       $X* 1 -> $X,
       0 + $X -> $X,
       $X + 0-> $X,
       1 + $X -> 1,
       $X + 1 -> 1,

       chop(v($X,$U),$N) -> m($U,chop($N)),

       chop(empty_matrix) -> empty_matrix,

       innerProduct(v($X,$U),m(v($Y,$V),$M)) -> $X*$Y+innerProduct($U,$M),
       innerProduct(empty_vector,empty_matrix) -> 0,

       vecMat($U, m(v($Y,$V),$M)) -> 
           v(innerProduct($U,m(v($Y,$V),$M)),
             vecMat($U,chop(m(v($Y,$V),$M)))),

       vecMat($U,m(empty_vector, $M)) -> empty_vector,

       m($U,$N) * $M -> m(vecMat($U,$M),$N*$M),
       empty_matrix * $M -> empty_matrix,

       #closure($M) [ $M == $M*$M ] -> $M
       #                           !-> closure($M*$M),

       closure($M) -> check_closure($M,p($M1))
                           where ( $M1 <- reduce($M*$M) ),

       check_closure($X,$X) -> $X,
       check_closure($X,$Y) -> closure($Y),
       


#get normal form for: 
T1 ->
  closure(
    m(v(1, v(0, v(1, v(0, v(1, v(0, v(0, v(0, v(0, v(0, v(0, v(0, v(0, v(0, v(0, v(0, v(0, v(0, v(1, v(0, v(0, v(0, v(0, v(0, v(0, v(1, v(0, v(1, v(0, v(0, v(0, v(0, empty_vector)))))))))))))))))))))))))))))))), 
    m(v(0, v(0, v(0, v(0, v(1, v(0, v(0, v(1, v(0, v(0, v(0, v(0, v(0, v(1, v(0, v(0, v(0, v(0, v(1, v(1, v(1, v(0, v(0, v(1, v(0, v(1, v(0, v(0, v(0, v(1, v(0, v(0, empty_vector)))))))))))))))))))))))))))))))), 
    m(v(1, v(0, v(1, v(0, v(1, v(0, v(1, v(0, v(0, v(1, v(0, v(0, v(0, v(1, v(0, v(0, v(0, v(0, v(1, v(0, v(0, v(0, v(0, v(1, v(0, v(1, v(0, v(1, v(0, v(1, v(0, v(0, empty_vector)))))))))))))))))))))))))))))))), 
    m(v(0, v(0, v(0, v(1, v(0, v(0, v(0, v(1, v(0, v(1, v(0, v(0, v(0, v(0, v(0, v(0, v(0, v(0, v(1, v(1, v(1, v(0, v(1, v(0, v(0, v(1, v(0, v(1, v(0, v(0, v(0, v(0, empty_vector)))))))))))))))))))))))))))))))), 
    m(v(0, v(1, v(0, v(0, v(0, v(1, v(0, v(1, v(0, v(0, v(0, v(0, v(0, v(1, v(0, v(0, v(0, v(0, v(1, v(0, v(0, v(1, v(0, v(1, v(0, v(0, v(1, v(0, v(1, v(0, v(1, v(0, empty_vector)))))))))))))))))))))))))))))))), 
    m(v(0, v(0, v(0, v(1, v(0, v(1, v(0, v(0, v(0, v(1, v(1, v(0, v(0, v(0, v(1, v(1, v(0, v(0, v(0, v(1, v(0, v(1, v(1, v(0, v(0, v(1, v(0, v(0, v(0, v(0, v(1, v(0, empty_vector)))))))))))))))))))))))))))))))), 
    m(v(0, v(0, v(0, v(0, v(0, v(0, v(1, v(0, v(0, v(1, v(0, v(0, v(0, v(0, v(0, v(0, v(0, v(0, v(1, v(0, v(0, v(0, v(0, v(1, v(0, v(1, v(0, v(0, v(0, v(1, v(0, v(0, empty_vector)))))))))))))))))))))))))))))))), 
    m(v(0, v(0, v(0, v(0, v(0, v(0, v(1, v(1, v(0, v(0, v(1, v(0, v(0, v(1, v(0, v(1, v(0, v(1, v(0, v(0, v(1, v(0, v(1, v(0, v(0, v(0, v(1, v(1, v(1, v(0, v(0, v(1, empty_vector)))))))))))))))))))))))))))))))), 
    m(v(0, v(0, v(1, v(0, v(1, v(0, v(1, v(0, v(0, v(0, v(0, v(1, v(0, v(0, v(1, v(1, v(0, v(0, v(1, v(0, v(1, v(1, v(1, v(0, v(0, v(1, v(0, v(1, v(0, v(0, v(1, v(1, empty_vector)))))))))))))))))))))))))))))))), 
    m(v(0, v(0, v(0, v(1, v(1, v(0, v(0, v(1, v(0, v(0, v(0, v(0, v(0, v(0, v(1, v(0, v(0, v(0, v(1, v(1, v(0, v(0, v(0, v(1, v(0, v(0, v(0, v(0, v(0, v(1, v(1, v(0, empty_vector)))))))))))))))))))))))))))))))), 
    m(v(1, v(0, v(0, v(0, v(1, v(0, v(1, v(1, v(0, v(1, v(0, v(1, v(0, v(1, v(0, v(0, v(1, v(0, v(1, v(0, v(0, v(1, v(0, v(0, v(0, v(1, v(0, v(0, v(0, v(1, v(0, v(0, empty_vector)))))))))))))))))))))))))))))))), 
    m(v(1, v(0, v(0, v(1, v(1, v(0, v(0, v(1, v(0, v(0, v(0, v(0, v(1, v(1, v(1, v(0, v(1, v(0, v(0, v(0, v(0, v(0, v(1, v(0, v(0, v(0, v(0, v(1, v(0, v(1, v(1, v(0, empty_vector)))))))))))))))))))))))))))))))), 
    m(v(1, v(1, v(0, v(0, v(0, v(1, v(0, v(1, v(1, v(1, v(0, v(0, v(0, v(1, v(0, v(1, v(1, v(0, v(1, v(0, v(0, v(1, v(0, v(1, v(0, v(0, v(1, v(0, v(1, v(0, v(1, v(0, empty_vector)))))))))))))))))))))))))))))))), 
    m(v(0, v(0, v(0, v(1, v(0, v(0, v(0, v(0, v(0, v(1, v(1, v(0, v(0, v(0, v(1, v(1, v(0, v(0, v(0, v(1, v(0, v(1, v(1, v(0, v(1, v(1, v(0, v(0, v(0, v(0, v(1, v(1, empty_vector)))))))))))))))))))))))))))))))), 
    m(v(0, v(0, v(1, v(0, v(0, v(1, v(0, v(1, v(0, v(0, v(0, v(1, v(0, v(1, v(0, v(0, v(0, v(0, v(1, v(0, v(1, v(0, v(0, v(0, v(0, v(0, v(0, v(0, v(0, v(1, v(0, v(0, empty_vector)))))))))))))))))))))))))))))))), 
    m(v(0, v(0, v(1, v(0, v(0, v(0, v(1, v(1, v(0, v(1, v(1, v(0, v(0, v(1, v(0, v(1, v(0, v(1, v(0, v(0, v(1, v(0, v(1, v(0, v(0, v(0, v(1, v(1, v(1, v(0, v(0, v(1, empty_vector)))))))))))))))))))))))))))))))), 
    m(v(0, v(0, v(1, v(0, v(1, v(1, v(1, v(0, v(0, v(0, v(0, v(1, v(0, v(0, v(1, v(1, v(0, v(0, v(1, v(0, v(0, v(1, v(1, v(0, v(0, v(1, v(0, v(0, v(0, v(0, v(1, v(1, empty_vector)))))))))))))))))))))))))))))))), 
    m(v(0, v(0, v(0, v(1, v(1, v(0, v(0, v(1, v(0, v(1, v(0, v(0, v(0, v(1, v(1, v(0, v(0, v(0, v(1, v(1, v(0, v(0, v(0, v(1, v(0, v(0, v(0, v(0, v(0, v(1, v(1, v(0, empty_vector)))))))))))))))))))))))))))))))), 
    m(v(1, v(0, v(0, v(0, v(1, v(0, v(0, v(0, v(0, v(1, v(0, v(1, v(0, v(0, v(0, v(0, v(0, v(0, v(1, v(0, v(0, v(0, v(0, v(1, v(0, v(0, v(0, v(0, v(0, v(1, v(0, v(0, empty_vector)))))))))))))))))))))))))))))))), 
    m(v(0, v(0, v(0, v(1, v(1, v(0, v(0, v(0, v(0, v(0, v(0, v(0, v(1, v(0, v(1, v(0, v(0, v(0, v(1, v(1, v(0, v(0, v(1, v(0, v(0, v(1, v(0, v(1, v(0, v(1, v(1, v(0, empty_vector)))))))))))))))))))))))))))))))), 
    m(v(0, v(1, v(1, v(0, v(0, v(0, v(0, v(1, v(1, v(0, v(0, v(0, v(0, v(0, v(0, v(1, v(0, v(0, v(0, v(0, v(0, v(1, v(0, v(1, v(0, v(0, v(1, v(0, v(1, v(0, v(1, v(0, empty_vector)))))))))))))))))))))))))))))))), 
    m(v(0, v(0, v(0, v(1, v(0, v(0, v(0, v(0, v(0, v(0, v(1, v(0, v(0, v(0, v(1, v(1, v(0, v(0, v(0, v(0, v(0, v(0, v(1, v(0, v(0, v(1, v(0, v(0, v(0, v(0, v(1, v(1, empty_vector)))))))))))))))))))))))))))))))), 
    m(v(0, v(0, v(1, v(0, v(0, v(0, v(1, v(0, v(0, v(0, v(0, v(1, v(1, v(1, v(0, v(0, v(1, v(0, v(1, v(0, v(0, v(1, v(0, v(1, v(0, v(1, v(0, v(0, v(0, v(1, v(0, v(0, empty_vector)))))))))))))))))))))))))))))))), 
    m(v(1, v(0, v(0, v(0, v(0, v(0, v(1, v(1, v(0, v(1, v(0, v(0, v(0, v(1, v(0, v(1, v(1, v(1, v(0, v(0, v(0, v(0, v(0, v(0, v(0, v(0, v(1, v(0, v(1, v(0, v(0, v(1, empty_vector)))))))))))))))))))))))))))))))), 
    m(v(1, v(0, v(0, v(0, v(0, v(0, v(0, v(0, v(0, v(1, v(0, v(1, v(0, v(0, v(0, v(0, v(0, v(0, v(1, v(0, v(0, v(1, v(1, v(0, v(0, v(1, v(0, v(1, v(0, v(0, v(1, v(1, empty_vector)))))))))))))))))))))))))))))))), 
    m(v(0, v(0, v(0, v(1, v(0, v(0, v(0, v(1, v(0, v(0, v(0, v(0, v(0, v(0, v(0, v(0, v(0, v(0, v(0, v(1, v(0, v(0, v(0, v(1, v(0, v(1, v(0, v(0, v(0, v(1, v(1, v(0, empty_vector)))))))))))))))))))))))))))))))), 
    m(v(0, v(0, v(0, v(0, v(1, v(0, v(0, v(0, v(0, v(1, v(0, v(1, v(0, v(0, v(0, v(0, v(0, v(0, v(1, v(0, v(1, v(0, v(0, v(0, v(0, v(1, v(0, v(1, v(0, v(1, v(0, v(0, empty_vector)))))))))))))))))))))))))))))))), 
    m(v(0, v(0, v(1, v(0, v(1, v(0, v(0, v(0, v(0, v(0, v(0, v(0, v(1, v(0, v(1, v(0, v(0, v(0, v(1, v(1, v(1, v(0, v(1, v(0, v(0, v(1, v(0, v(1, v(0, v(1, v(0, v(0, empty_vector)))))))))))))))))))))))))))))))), 
    m(v(1, v(0, v(1, v(0, v(0, v(1, v(0, v(0, v(1, v(0, v(0, v(0, v(0, v(0, v(0, v(1, v(0, v(1, v(1, v(0, v(0, v(1, v(0, v(1, v(0, v(0, v(1, v(0, v(1, v(0, v(1, v(0, empty_vector)))))))))))))))))))))))))))))))), 
    m(v(0, v(0, v(0, v(1, v(0, v(1, v(0, v(0, v(0, v(0, v(1, v(0, v(0, v(0, v(1, v(0, v(0, v(0, v(0, v(0, v(0, v(1, v(0, v(0, v(0, v(1, v(0, v(0, v(0, v(0, v(1, v(1, empty_vector)))))))))))))))))))))))))))))))), 
    m(v(0, v(0, v(1, v(0, v(0, v(0, v(0, v(1, v(0, v(1, v(0, v(1, v(0, v(1, v(0, v(0, v(1, v(0, v(1, v(0, v(0, v(0, v(0, v(1, v(0, v(1, v(0, v(0, v(0, v(1, v(0, v(0, empty_vector)))))))))))))))))))))))))))))))), 
    m(v(1, v(0, v(1, v(0, v(0, v(0, v(1, v(1, v(0, v(1, v(1, v(0, v(0, v(0, v(0, v(0, v(0, v(0, v(0, v(0, v(1, v(0, v(1, v(0, v(0, v(0, v(1, v(0, v(1, v(0, v(0, v(1, empty_vector)))))))))))))))))))))))))))))))), 
    empty_matrix))))))))))))))))))))))))))))))))),


       XXX->END

     ),NFirstTops)
  )
 )
);
